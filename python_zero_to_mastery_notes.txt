pep = python enhancement proposals ,, community which standardize ways to write code..pep8, style guide for python codes
anaconda contains all tools needed for data science and machine learning
jupyter notebook helps visualize easily
everything in python is an object
python is an object oriented programming language because everything is built on class keyword and methods are used
to perform actions on them
an object has methods and attributes that can be accessed with the .method
we can create our own datatypes with diff attributes and methods
oop
oop is a paradigm - it helps us manage our codes, helps structure codes in a way that is easier to maintain,
extend and rewrite. as codes get bigger, it helps us organize millions of codes
code real life objects
we can create our own class using the class keyword then the name of the class in camelcase(capitalize each word)
#instantiate means creating instance(object) from a class
a class is a blueprint for creating objects, it has properties/attributes and methods
The __init__() function is called automatically every time the class is being used to create a new object.
when writing code, try to be DRY(do not repeat yourself)
when a  function doesnt return anything, we get none
one piece of code, one blueprint(class) is used to create multiple objects at different positions in memory,
they are distinct
oop help us add functionalities and mimic the real world
helps us write codes that are repeatable, organized, and memory efficient
attributes are dynamic pieces of data, they are unique to specific objects
Class object attribute is diff from regular attribute, its not dynamic and its in the same line as the method
note that self refers to the class
init is used when we want to create a custom object i.e. instantiate
creating a method for the class
there are three methods
1. instance method- the normal one that uses self
2. class method use cls as the first parameter in def the method
it can be used without instantiating Methods: Cannot access anything else in the class. Totally self-contained code.
Class Methods: Can access limited methods in the class. Can modify class specific details.

3. static method- this works as the above but doesnt the cls keyword and hence doesnt have access to the class
this is used when we don't care about the class attribute
Instance Methods: The most common method type. Able to access data and properties unique to each instance.
Static
all of this (oop) is to create our datatype that models the real world. help structure our code

four pillars of oop
1. encapsulation - binding of data and functions that manipulate the data to an object to keep all in a box
so users, codes and machines can interact with easily. the data and functions are the attributes and methods
functionalities are encapsulated for use(.methods)  it helps us mimic what happens in the real world
2. abstraction - hiding info and giving access only to whats necessary. only what the machine needs is provided per
time, all other things are kept away. when u call a method or function, it just implements , u dont have to go to the
python documentation to see how its run or whats done underneath the hood. we dont have to code certain things from
scratch-
private and public variables
this concepts comes in play under abstraction in case of overwriting of our methods
python uses an underscore to show private variables, it tells programmers not to use or touch that variable
__ a convention in python, dunder method, inbuilt function, we usually dont use it to create variables
3. inheritance - allows new objects take on properties of existing objects,, parent class and
children/sub/derived classes
#isinstance a builtin function to check for inheritance (instance, class)
doing an object. brings all of the attributes, methods and dunder methods
everything in python inherits from the base object class python comes with called object
everthing in python is from the base object thats y dunder methods are available when u do a .
4. polymorphism - poly means many, morphism means form. (many form). it refers to the way object classes can share
the same method name, and the method name in turn act differently based on what objects call it


# calling a method from a subclass of the parent class
use super()__init__(param)
or name of the parent class__init__(self,param)

#introspection - determining the type of an object at runtime(when the code is running)
python uses some functions to introspect codes
dir -  gives all of the method and attribute an object has
doing a . does introspection
#dunder magic methods
these allow us to use python specific functions on objects created through the class
dunder mthds are only modified when used on specific objects, it doesnt change their functions when used
normally outside the scope of modification

MRO - method resolution order
shows u the order with which it checks, it uses the algorithmn depth first search-

functional programming
separation of concerns (each chunk concerns itself with one thing it is good at),
packaging codes into separate sensible functionally organized chunks,
separates data and functions unlike oop(encapsulation).
it emphasizes simplicity. functions operate on well defined data structure
the data of a program and the behaviour of a program are separate


the goal ultimately of any programming type is
1. clear and understandable code
2. easy to extend codes i.e we can grow our code to make it better
3. easy to maintain
'4. code is 'dry'- do not repeat yourself
5. memory efficient

pillar of functional programming
pure functions- given the same input it always return the same output
                a function shouldnt result in side effect i,e, things that affect the outside world(screen)
                        or affecting a variable outside the scope of the function
pure functions help to remove bugs
it is impossible to have pure functions everywhere cos we have to interact with the world
lambda expressions are one time anonymous functions
# lambda param: action(param)

DECORATORS
they have @name
functions are first class citizens- they can be passed around like variables, like arguments

HIGHER ORDER FUNCTION HOC e.g. map,reduce, filter
#a function that accepts another function
# or  a function that returns another function
DECORATOR supercharges a function i.e. gives it more functionalities, it wraps a function and enhances it

ERROR HANDLING
am error that crashes the program is called an exception(built in exceptions)
error handling allows python script keep running even if there are errors
type error- btw diff data typesthat are incompatible
syntax error - nt a standard python syntax
name error - undefined name
index error - index not available
key error - for dict , accessing a key that doesnt exist
zero division error
Generator
they are functions
generators allow us generate sequence of values over time. uses keyword yield and it can pause and resume functions

# with generators we dont have to hold things in memory and hence perform things quickly
# generators are useful in calculating large set of data
# generators are faster than list when we want to loop a large range of data

MODULES is a way of organizing codes,, each .py file is a module
use snake case in naming modules
a module has functions in them

PACKAGE is a folder containing modules
to import from a package, do import package_name.module_name
in an ide a python package must have an __init__.py file, thats how a package is identified
note that u can create a python package in anther python package
PIP python install package
to install ackages on pycharm, got to settings-project setting-python interpreter-click on the +,share for the package
 and download

pip install package name to install package and pip uninstall package to install
do a pip3 list to list all the packages

virtual environments help to have diff versions of packages and modules and use them on diff projects
use pipenv
or venv on pycharm by default.. its a virtual environmrnt created by pycharm
creating a new project has its own venv which doesnt affect any other projects.. go to file and create new file.... its
like a new universe

Regular expressions are extremely useful in extracting information from text such as code, log files, spreadsheets,
or even documents.

A RegEx, or Regular Expression, is a sequence of characters that forms a search pattern.

RegEx can be used to check if a string contains the specified search pattern.

pdb is a class debugger
set_trace is the most commonly used method under the pdb debugger takes u to an interactive pdb/python environment
where u can see whats the bug on ur system

file I/O - input/output


web scrapping is grabbing data from web using python... download a web page, get data, clean it up and use
website has a browser and a server which is  acomputer in the world that has the (html file which is the content of the
website,css which gives the colors amd stylings the website has, javascript which allows diff behaviours on the website
(submitting forms, drop down menus)
“Web scraping,” also called crawling or spidering, is the automated gathering of data from an online source
usually from a website
applications of web scraping
1. Social media sentiment analysis
2. eCommerce pricing  and sales - price monitoring and lead pricing
- to get data and see trends to know the best time to invest
3. Investment opportunities
4. Machine learning
robots.txt is a way websites tell u wat u can or cannot scrape
 Application prgramming interface API -- gives u permission for some website if u are a user
 api is the easiest way to get data from a website
 Googlebot is what google uses to index website- creates a database of all the web pages
googlebot crawl website to see what info is useful for a user

BeaautifulSoup is a library in python used to scrape websites , do pip install beautifulsoup4
request helps us grab html files do pip install requests
scrappy is a lot more functional than beautifulsoup, it can be used to scrape a website
scrappy is a framework

Testing helps solve the issue of adding codes by diff developers abd debugging
a test is another python file
each module should have a test file to run test on
its for development of products, customers dont get to see it
python -m unittest runs all of the tests
python -m unittest -v (verbose) shows other info
careers in python
1. machune learning
2. testing/automation
3. research analyst
4. data scientist
5. software engineer
6. backend devloper
7. pythpon developer
8. data analyst

github helps u build ur experience, contribute to open source projects(look at zero to mastery on github)
website esp for a full stack or front end developer or designer, talk about how u built it, showcase ur works
do one or two big projects that stand out e.g. face recognition
have a blog e.g on medium

python can be used for
ml
emails'twitter bots
data visualizatin
data analysis
data scrapping
image processing
web dev
scripting
automation
file processing



scripting is writing script.. being more efficient with the power of the code
image processing
do a pip install pillow for processing image
python image library, pil, its not compatible with pillow
pil was forked to pillow
learn to choose the right library

scripting in python helps in image processing, processing tons of images at a short time

opencv is a library used for ml,, self driving cars. opencv is used for image and video processing
email is a built in module in python
smtplib is a lib for email sending, allows create an smtp server which communicates the lang of the server
smtp-simple mail transfer protocol it is used to send email while pop, post office protocol or
imap internet message access protocol are used to retrieve mails at the receivers end
hackers uses dictionary attack like a dic in python using a brute force attack to loop through a list of hackd account
and password

hashing a password turns a password to anther form that isn't easily seen.. use the hash generator SHA1
k anonymity allows somebody receive info about us and still not know who we are

a hash function is a function that generates a value of fixed length for each input it gets.. e,g md5hash generator,
sha1,sha256 generators
hash functions are one way...if i give u the hash function, u can never know what the input was
hash functions are fixed for a fixed input..its capital case sensitive
idempotent - a function given an input, always gives the same output

hash tables collects keys and we know where things are in the memory
sha-256 hash generator takes longer time and is used in photography


WEB DEV WITH PYTHON
how web works
when we type a  website into a browser makes request to a machine, a computer(server located anywhere in the world), looks
for who owns the website, what machine can serve details of the website...servers communicate over http/https
http/https is the lang or protocol our computer and the server communicate with
the server has three files
a. html file which is the text or content of the website
b. css file which contains the styling of the website( fonts, color, position of elements)
c. js which gives a website behaviour( allows functionality,,, log in, tweet....) we are allowed to take actions,
interact with the site

the three files are then sent to the browser and it is displayed for us to see

python programmers can write the logic and rules the servers work upon
in creating websites
write html file, write css file and js file and ref in the html file for it to reflect, on the website,
go to developers function and refresh
write css at the head of th html file and js at the bottom og the body
src for js stands for source

flask is a framework used for building server, it has added tools, security benefits..is a microframework..a small lib
to do things fast
django is a large framework for python

follow the flask documentation, do an install, create venv... follow the commands to get a route /link that returns
what your decorated function wants
setflask_app = naem_of_file
we can set flask_app = anyname e.g server.py or superduper
then do python -m flask run

go to debug mode documentation to turn it on
type set flask_env = development to put it in dev mode and once u make changes and save, the debugger automatically
detects it.. when u refresh on ur website, change is effected

flask converts text strings to html files automatically
note that if we have tw routes with same url end,, the first one will be executed first

in the flask documentation we see static files
they are files that would not be changed e.g. css and js files.. create a static folder for them  while we create a
templates folder for html

favicon is an icon used by browsers for tab and bookmarks. it distinguishes your website and gives it a unique brand

{{}} flask sees this as it needs to be evaluated as python .. it uses a templating lang called jinja
jinja helps dynamically update parts of the page {{}}

url parameters
variable names
uuid -unique identifier
int

twilio is the go tool for sms
WSGI- web server gate interface
MIME type-multipurpose internet mail extensions.... it indicates the nature and format of a file
Browsers use the MIME type, not the file extension, to determine how to process a URL, so it's important that web
servers send the correct MIME type in the response's Content-Type header
it helps in data transfer btw browser and server

creating my portfolio
map files are for debugging
gz are zipped and compressed files to reduce size of files

crtl+g to add all instances at once

since we arent using components.html,  go to index.html, navbar and remove components.. remove components
from all of the html files

the ideal is for html to display pages and also use form to send data to the server, using action atribute
we can put post or get at the action tab

front end -- css java html for browser side
back end -- python flask django for server side
database end is also backend e.g.mongodb

DATABASE- collection of data(many forms, int, date).. allows us organize data in a useful form
database management system DBMS - collection of programs that allow us access databases and work with data, allows
control and access to database users
helps us update, insert, select data
types of DBMS
1. postgreSQl,mysql,sqlite,sybase, hypersql- relational DBMS : have two or more tables, columns and rows.. each row rep
an entry.. schema is relation btw rows and fields
all relational bases uses sql
stores all users in a table e.g tweets
sql helps us communicate with the database and server just like http with website and server
2. non relational DB, NOSQL DB (hypertable, mongodb,redis,cassandra),, hlps build an application without
predefining a schema. used for unstructured data,, they are like folders... doc oriented..
stores each user as a doc e.g linkedin
they communicate with a query language e,g,mongodb query language

Databases to use depend on ur need
back end developer
node server
database


Testing and automation
selenium is one of the best tools for automation with python
it helps interact with the browser without human involvement,, it uses code
each brows er(chrome,edge,firefox,safari) have their own drivers
install the driver of the browser(chrome) you want to use to automate things
latest browsers are stable(maybe current releases that havent been tested enough)

MachineLearning Nd Datascience
application
robots, self driving cars, voice processing, lang processing, predictions
ml helps to make machines more and more like humans
AI- human intelligence exhibited by machines,, machines that act as human,,,NarrowAI where machines are as good or even
better at certain tasks than humans e.g.detection heart diseases, ... machines are good at one thing and not diverse
things like humans.... General AI is where machines can be exceptionally god at diverse things like humans

ML is a subset of AI,,, an approach to get AI thru systems that find pattern in a set of data
getting machines to act without being explicitly programmed

Deep learning(Deep neural network) is one of the techniques for implementing ML,, its a type of algorithm

Data Science over laps ML.... analysing data for a business goal

Machine Learning
programs are often procedural(if this then this,, we give computer input and function)
for ML we give input, output ,, and allow it figure out the function/model/algorithm/brain/bot

history of data
spreadsheet(csv, excel)-----relational DB(tables, columns and rows)---Big Data(Nosql(mongodb)---- ML

use machines to predict result based on data given

machine learning
1. supervised learning- data already has categories,, label data, text data to know if functions are right ir wrong
we do classification(draw a line to make a decision of output) and regression(predicting stock prices)

2. unsupervised learning- data without labels.. we use clustering to create the groups giving it a bunch of data points
or we use association rule learning(associate diff things to make predictions), we cant tell the machine if they are
right or wrong

3. reinforcement- we use trial and error e.g a machine learns a game by playing on and on till it gets the highest score
(skill acquisition and real time learning)

Machine 101
1. import the data
2. clean the data
3. split the data into training set and test set(80 rows of a dataset are given to a machine to learn from and 20 rows
of our preexisting data is used to test if the algorithm is good or bad
training set is input
4. create a model- import thr algorithm from sciki learn(decision trees, svm, KNN-k nearest neighbor)
5. check the output using the test set
6, improve

Tools for ML
Numpy- lib that help us use list and multidimensional arrays
Pandas - lib used for data analysis.. helps manipulate data in rows and columns,, data are extracted into DataFrames
scikit-learn: helps to create a model
matplotlib : a charting lib,, allows us visualize data
jupyternotebooks: useful for Ml and data science,, helps step through processes, keep track of codes, see visualizations
it helps communication
kaggle: community of mk experts, free access to data

data in csv format can easily be worked on by pandas
in pandas we get output as df
pd.read_csv



questions

3. do the 100 python questions
4. go back to folder 16
5. do  a website from the free sites without building from scratch
6. do the job board thing on the xero to mastery github link still on folder 16
9. explore opencv
10. go back to pyPDF2
14, check mail and do twitter bot
15, do sms part, cant verify number at twilio
15, look at try.py
18, web dev folder 15, y do we have work.html and works.html
19, add ur project to the site video 16 content
20, network doesnt show some files like favicon, w_env.js folder 19
21, folder 19, duplicate not in my options 06:23
22, explain folder 19,, y was it the form we erased  from the tahnkyou.html-
23, do thank you name using{{}}
24, folder 21, newline in their positioqn is giving tyeperror